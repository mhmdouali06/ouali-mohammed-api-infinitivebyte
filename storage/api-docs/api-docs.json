{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel API",
        "contact": {
            "email": "mhmdouali@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in and get a JWT token",
                "description": "Authenticate a user and retrieve a JWT token.",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "test@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "azerty"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "api_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get the authenticated user",
                "description": "Retrieve the authenticated user's details.",
                "operationId": "9d9bc556f927575aa492a88c28fe5908",
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "John Doe"
                                        },
                                        "email": {
                                            "type": "string",
                                            "example": "test@gmail.com"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out the authenticated user",
                "description": "Invalidate the user's token and log them out.",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh the JWT token",
                "description": "Get a new JWT token by refreshing the existing one.",
                "operationId": "2c27d311a2876560fcb5a754b556cdc5",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "api_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "List payments",
                "description": "Retrieve a list of payments with optional filtering, sorting, and pagination.",
                "operationId": "826dc6b24dd704607aa018a59207dd96",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "id"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for filtering payments by amount",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Specify 'paginate' for paginated results or 'all' for all results",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "paginate"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for paginated results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Payment"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Create a new payment",
                "description": "Add a new payment to the database.",
                "operationId": "5e2794ba3d3c64e70873367505e4a751",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/payments/{id}": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Retrieve a specific payment",
                "description": "Get detailed information about a specific payment by its ID.",
                "operationId": "a9a7656e0f22931dbcedc57a2d959554",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payments"
                ],
                "summary": "Update a specific payment",
                "description": "Update details of a specific payment by its ID.",
                "operationId": "f4ac920fef70ae74d3ed9d1cfc637746",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Payment"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Payment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payments"
                ],
                "summary": "Delete a specific payment",
                "description": "Remove a payment from the database by its ID.",
                "operationId": "eee625edf09d69ad0d35b893a3b4f087",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the payment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Payment deleted successfully"
                    },
                    "404": {
                        "description": "Payment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties": {
            "get": {
                "tags": [
                    "properties"
                ],
                "summary": "List properties",
                "description": "Retrieve a list of properties with optional filtering, sorting, and pagination.",
                "operationId": "ae50890d9da51a5cfe01cd2151d4077a",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "id"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for filtering properties by name, address, or type",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Specify 'paginate' for paginated results or 'all' for all results",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "paginate"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for paginated results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of properties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Property"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "properties"
                ],
                "summary": "Create a new property",
                "description": "Add a new property to the database.",
                "operationId": "debc241247e30f0490b9e236483217d0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Property"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Property created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Property"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/properties/{id}": {
            "get": {
                "tags": [
                    "properties"
                ],
                "summary": "Retrieve a specific property",
                "description": "Get detailed information about a specific property by its ID.",
                "operationId": "1ffeff79c18b3281ff5e01339a5831e7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Property"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "properties"
                ],
                "summary": "Update a specific property",
                "description": "Update details of a specific property by its ID.",
                "operationId": "548a9a58943f8a30e927e2fe1a074277",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Property"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Property updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Property"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "properties"
                ],
                "summary": "Delete a specific property",
                "description": "Remove a specific property from the database.",
                "operationId": "a1f3cd4975f784df9ae3f810e13a2066",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the property to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Property deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Property not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tenants": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "List tenants",
                "description": "Retrieve a list of tenants with optional filtering, sorting, and pagination.",
                "operationId": "2ff808d52c69b67dea57d5c707d2136c",
                "parameters": [
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "id"
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for filtering tenants by first name, last name, or email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "items",
                        "in": "query",
                        "description": "Specify 'paginate' for paginated results or 'all' for all results",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "paginate"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for paginated results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tenants",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Tenant"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Create a new tenant",
                "description": "Add a new tenant to the database.",
                "operationId": "081dbaa95ff10d9c8aa383370215ad92",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenant"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tenant created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenant"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/tenants/{id}": {
            "get": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Retrieve a specific tenant",
                "description": "Get detailed information about a specific tenant by its ID.",
                "operationId": "1f9c54de299ba7fe06f2a64fb432b310",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tenant to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tenant details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenant"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tenant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Update a specific tenant",
                "description": "Update details of a specific tenant by its ID.",
                "operationId": "a7f5870a615dbfa715104bd0ac963089",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tenant to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tenant updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenant"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tenant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Delete a specific tenant",
                "description": "Remove a tenant from the database by its ID.",
                "operationId": "fce6764b38b7ebbf38473a513cb5d128",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the tenant to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tenant deleted successfully"
                    },
                    "404": {
                        "description": "Tenant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Payment": {
                "required": [
                    "tenant_id",
                    "payment_date",
                    "amount"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "tenant_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "payment_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-08-27"
                    },
                    "amount": {
                        "type": "number",
                        "format": "decimal",
                        "example": 299.99
                    },
                    "settled": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "Property": {
                "required": [
                    "name",
                    "address",
                    "type",
                    "number_units",
                    "price"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Property Name"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, City, Country"
                    },
                    "type": {
                        "type": "string",
                        "example": "Residential"
                    },
                    "number_units": {
                        "type": "integer",
                        "example": 10
                    },
                    "price": {
                        "type": "number",
                        "format": "decimal",
                        "example": 99.99
                    },
                    "description": {
                        "type": "string",
                        "example": "Description of the property"
                    }
                },
                "type": "object"
            },
            "Tenant": {
                "required": [
                    "first_name",
                    "last_name",
                    "phone",
                    "email",
                    "property_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "phone": {
                        "type": "string",
                        "example": "123-456-7890"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "address": {
                        "type": "string",
                        "example": "456 Elm St, City, Country"
                    },
                    "property_id": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter 'Bearer' [space] and then your token in the text input below.\n *                   Example: 'Bearer eyJhbGciOiJIU...'",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Operations related to user authentication"
        },
        {
            "name": "Payments",
            "description": "Payments"
        },
        {
            "name": "properties",
            "description": "properties"
        },
        {
            "name": "Tenants",
            "description": "Tenants"
        }
    ]
}